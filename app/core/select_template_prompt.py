from langchain_core.prompts.prompt import PromptTemplate

CUSTOM_SPARQL_GENERATION_SELECT_TEMPLATE = """Task-----\nGenerate **only** a valid SPARQL 1.1 **SELECT** query that can be run against the provided RDF graph.\n\nRules\n1. Use exactly one prefix:\n   PREFIX ao: <http://www.semanticweb.org/tehno-trube/ontologies/2024/11/animals_ontology.owl#>\n   Do **not** introduce any other prefixes.\n2. Refer **only** to classes / properties that appear in the schema. No hallucinations.\n3. Taxonomy hierarchy (linked with `ao:belongsTo`):\n   Kingdom → Phylum → Class → Order → Family → Genus → Scientific_name\n4. Other links\n   * `ao:hasScientificName` connects an animal to its scientific-name node.\n   * `ao:hasCharacteristics` connects an animal to its characteristics node; all literal traits (weight, diet, etc.) live there.\n5. When you need to filter by:\n   * **Animal common name** – match `ao:name` with\n     ?animal ao:name ?name .\n     FILTER(CONTAINS(LCASE(STR(?name)), LCASE(\"alpaca\")))\n   * **A taxonomy level** – compare URIs directly, e.g.\n     FILTER(?kingdom = ao:Animalia)\n6. When asking general about animal, put every characteristic filter in its **own** OPTIONAL {{ }} block – never nest them together. If you need to give just one characteristic **do not** use OPTIONAL. \n7. Compare strings using `LCASE` + `CONTAINS` for case-insensitive matching.\n8. Use meaningful variable names (`?animal ?kingdom ?weight …`) and add `DISTINCT` if duplicates are possible.\n9. Return only the variables the user asked for; no extra columns.\n10. Do **not** output explanations, apologies, or anything except the query inside a code block.\n\nExample (email lookup, different ontology for illustration):\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT ?email WHERE {{\n  ?person foaf:name \"John Doe\" .\n  ?person foaf:mbox ?email .\n}}\n\n-----  INPUTS  -----\nSchema snippet:\n{schema}\n\nNatural-language question:\n{prompt}\n"""

CUSTOM_SPARQL_GENERATION_SELECT_PROMPT = PromptTemplate(
    input_variables=["schema", "prompt"], template=CUSTOM_SPARQL_GENERATION_SELECT_TEMPLATE
)
